<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.group.dao.ProductStorageMapper">
  <resultMap id="BaseResultMap" type="com.first.group.entity.ProductStorage">
    <result column="storageid" jdbcType="VARCHAR" property="storageid" />
    <result column="productid" jdbcType="VARCHAR" property="productid" />
    <result column="num" jdbcType="VARCHAR" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    storageid, productid, num
  </sql>
  <select id="selectByExample" parameterType="com.first.group.entity.ProductStorageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.first.group.entity.ProductStorage" useGeneratedKeys="true">
    insert into product_storage (storageid, productid, num
      )
    values (#{storageid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.first.group.entity.ProductStorage">
    insert into product_storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storageid != null">
        storageid,
      </if>
      <if test="productid != null">
        productid,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storageid != null">
        #{storageid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <select id="findById" resultType="com.first.group.entity.ProductStorage">
    select id,productid,storageid,num from product_storage
    <where>
      <if test="_parameter!=null">
        id=#{id}
      </if>
    </where>
  </select>
  <select id="findAll" resultType="com.first.group.entity.ProductSales">
    select id,productid,storageid,num from product_storage
  </select>


  <update id="updateStorage" parameterType="com.first.group.entity.ProductStorage">
    update product_storage set productid = #{productid},storageid = #{storageid},num=#{num}
    where id=#{id}
  </update>

  <delete id="deleteStorage" parameterType="com.first.group.entity.ProductStorage">
    delete from product_storage where id = #{id}
  </delete>
</mapper>