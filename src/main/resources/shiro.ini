# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[main]
# 对象和它们的属性在这里定义
dataSource=org.springframework.jdbc.datasource.DriverManagerDataSource
dataSource.driverClassName=com.mysql.cj.jdbc.Driver
dataSource.url=jdbc:mysql://47.112.28.145:3306/culture_goods
dataSource.username=root
#如果数据库没有密码，就不要写这行
dataSource.password=zf1234
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#是否检查权限
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.dataSource=$dataSource
#重写sql语句
#根据用户名查询出密码
jdbcRealm.authenticationQuery = select password from user_information where userid = ?
#根据用户id查询出用户角色
jdbcRealm.permissionsQuery = select rolename from user_roles where userid = ?
#根据角色名查询出权限
jdbcRealm.permissionsQuery = select authorname from user_authority where userid = ?
#声明一个realm
MyRealm=com.first.group.authority.MyRealm
#myRealm2=com.github.zhangkaitao.shiro.chapter2.realm.MyRealm2
#指定securityManager的realms实现
#securityManager.realms=$myRealm,$myRealm2
securityManager.realms=$MyRealm
#[users]
# 用户在这里定义，如果只是一小部分用户。（实际使用中，使用这种配置显然不合适）
#root = secret, admin
#guest = guest, guest
#presidentskroob = 12345, president
#darkhelmet = ludicrousspeed, darklord, schwartz
#aihe = aihe, goodguy, client

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
#[roles]
# 角色在这里定义，（实际应用中也不会在这里定义角色，一般都是存储于数据库中）
#admin = *
#client = look:*
#goodguy = winnebago:drive:eagle5
#[urls]
# web系统中，基于url的权限配置，web章节会介绍。
